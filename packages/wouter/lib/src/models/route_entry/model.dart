import 'package:flutter/foundation.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

part 'model.freezed.dart';

/// Represents an entry in the Wouter navigation stack.
///
/// Each [RouteEntry] typically corresponds to a specific path that has been
/// navigated to. It holds the `path` string and a callback (`onResult`)
/// to handle any result that might be passed back when this route is popped
/// from the stack.
///
/// The generic type [T] defines the expected type of the result that this
/// route might produce when it is popped. For routes that don't return a
/// result, [T] can be `void` or `Null`.
///
/// This class uses the `freezed` package for generating immutable data class
/// boilerplate.
@freezed
sealed class RouteEntry<T> with _$RouteEntry<T> {
  /// Creates an instance of [RouteEntry], specifically a [PathRouteEntry].
  ///
  /// - [path]: The path string associated with this route entry (e.g., "/users/123").
  ///   This is the path that was used to navigate to this entry.
  /// - [onResult]: A callback function that is invoked when this route entry
  ///   is popped from the navigation stack and a result of type [T] is provided.
  ///   This allows the route that pushed this entry to receive data back.
  ///   If the route is popped without a result, or if the result type doesn't match [T]
  ///   in a type-safe way, the behavior might depend on the caller of `onResult`.
  const factory RouteEntry({
    required String path,
    required ValueSetter<T> onResult,
  }) = PathRouteEntry; // Refers to the concrete class generated by Freezed
}
