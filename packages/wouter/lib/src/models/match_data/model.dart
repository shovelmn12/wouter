import 'package:flutter/foundation.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

part 'model.freezed.dart';

/// Represents the result of a successful route path match.
///
/// This data class holds the matched path and any arguments (such as
/// path parameters) extracted from the path during the matching process.
///
/// It uses the `freezed` package to generate boilerplate for immutable
/// data classes, including `copyWith`, `==`, `hashCode`, and `toString`.
@freezed
sealed class MatchData with _$MatchData {
  /// Creates an instance of [MatchData].
  ///
  /// - [path]: The actual path segment that was matched by a route pattern.
  ///   For example, if the pattern is `/users/:id` and the URL is `/users/123`,
  ///   the matched path might be `/users/123` or a relevant sub-path depending
  ///   on the matcher implementation.
  /// - [arguments]: A map of arguments extracted from the path. This typically
  ///   includes path parameters. For example, for the pattern `/users/:id` and
  ///   URL `/users/123`, the arguments map would likely be `{'id': '123'}`.
  ///   Values are `dynamic` to accommodate various types of parameters, though
  ///   they are often strings.
  const factory MatchData({
    required String path,
    required Map<String, dynamic> arguments,
  }) = _MatchData; // Refers to the concrete class generated by Freezed
}
